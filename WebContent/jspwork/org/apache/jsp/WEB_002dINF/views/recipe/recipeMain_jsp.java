/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-11-09 05:18:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.recipe;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import login.model.vo.Member;

public final class recipeMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/recipe/../common/footer.jsp", Long.valueOf(1604461117772L));
    _jspx_dependants.put("/WEB-INF/views/recipe/../common/gnb.jsp", Long.valueOf(1604460327201L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("login.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write("\t.name{\r\n");
      out.write("\t\tcolor:#0D6948;\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.card:hover{\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t.card-group{margin-top:120px;}\r\n");
      out.write("\t.card-text{font-weight:bolder}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<br>\t<br>\t<br>\t<br>\t<br>\t<br>\t<br>\t<br>\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("<div class=\"card-group\">\r\n");
      out.write("  <div class=\"card\"\t onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=1'\">\t\t\t<!--RecipeListTypeServlet -->\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/비건이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">비건</b></h5>\r\n");
      out.write("      <p class=\"card-text\"> 비건 상태는 윤리적, 도덕적인 이유로 동물성 원료를 거부하는 상태입니다. 이는 음식뿐 아니라 생활 전반에 거쳐서 동물성 원료를 거부하는 사람을 뜻합니다.</p>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"card\"\t onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=2'\">\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/락토이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">락토 베지테리언</b></h5>\r\n");
      out.write("      <p class=\"card-text\">락토 베지테리언은 동물성 원료 중 우유까지는 섭취하는 상태입니다</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"card\"\t onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=3'\">\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/오보이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">오보 베지테리언</b></h5>\r\n");
      out.write("      <p class=\"card-text\">오보 베지테리언은 동물성 원료 중 달걀까지 섭취하는 상태입니다.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("    <div class=\"card\"  onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=4'\">\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/락토오보이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">락토 오보 베지테리언</b></h5>\r\n");
      out.write("      <p class=\"card-text\">락토-오보 베지테리언은 이름에서도 알 수 있듯이 우유와 달걀 둘 다 섭취하는 비건 지향을 말합니다.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("    <div class=\"card\"\t onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=5'\">\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/페스코이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">페스코 베지테리언</b></h5>\r\n");
      out.write("      <p class=\"card-text\"> 페스코 베지테리언은 땅 위에서 사는 동물들 즉, 소, 닭, 돼지, 오리 등의 동물을 섭취하지 않지만 바다에서 사는 해산물은 섭취하는 비건 지향이라고 할 수 있습니다.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("    <div class=\"card\"\t onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=6'\">\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/폴로이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">폴로 베지테리언</b></h5>\r\n");
      out.write("      <p class=\"card-text\">플렉시테리언은 기본적으로 채식주의를 지향하지만 사정상, 혹은 자기 나름대로의 허용된 기준 안에서 육류(적색육)를 먹는 경우다. 그냥 골고루 먹는 것과 다른 점은, '채식이 기본'이라는 의식의 차이. 보통 채식주의에 입문할 때 가장 먼저 들어서는 단계로 분류한다.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("     <div class=\"card\"\t onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/recipe.cate?bcate=7'\">\r\n");
      out.write("    <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/recipe/플렉이미지.PNG\" class=\"card-img-top\" alt=\"...\">\r\n");
      out.write("    <div class=\"card-body\">\r\n");
      out.write("      <h5 class=\"card-title\"><b class=\"name\">플렉시테리언</b></h5>\r\n");
      out.write("      <p class=\"card-text\">플렉시 테리언으 기본적으로 동물성 원료를 피하는 비건이지만 어쩔 수 없는 사정으로 육류를 섭취하는 비건 지향입니다.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Member loginUser  = (Member)session.getAttribute("loginUser");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>GNB</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\thtml, body, div, span, img, header, nav, ul, li{margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; text-decoration: none; border-style: none; color: #000000; list-style: none;}\r\n");
      out.write("\tbody{line-height: 1;}\r\n");
      out.write("\t.gnb{width: 100%; height:62px; border-bottom: 1px solid lightgray; min-width: 800px; position: fixed; top: 0; background-color: #fff; text-align: center;}\r\n");
      out.write("\t.gnb-nav ul{width: 80%; max-width: 1000px;  min-width: 800px; margin: auto; display: flex; flex-direction : row; text-align: center;}\r\n");
      out.write("\t#logo {width: 130px;}\r\n");
      out.write("\t.gnb-nav-list{left: 0; width: 90px; cursor: pointer; margin: auto; text-align: center; line-height: 50px;}\r\n");
      out.write("\t.gnb-nav-list:nth-child(1){margin-right: 200px;}\r\n");
      out.write("\t.gnb-nav-list:nth-child(1):hover{border: none; margin-right: 200px;}\r\n");
      out.write("\t.gnb-nav-list:hover {font-weight: bold; border-bottom: 3px solid #41A693;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header class=\"gnb\">\r\n");
      out.write("\t\t<nav class=\"gnb-nav\">\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li class=\"gnb-nav-list\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("'\"><img id=\"logo\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("'\" src=\"");
      out.print( request.getContextPath() );
      out.write("/images/common/logo.png\" style=\"cursor: pointer;\"></li>\r\n");
      out.write("\t\t\t\t<li  class=\"gnb-nav-list\" onclick=\"location.href = '");
      out.print( request.getContextPath() );
      out.write("/aboutPage.me'\">About</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"gnb-nav-list\">식당검색</li>\r\n");
      out.write("\t\t\t\t<li class=\"gnb-nav-list\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/recipe'\">레시피</li>\r\n");
      out.write("\t\t\t\t<li class=\"gnb-nav-list\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/vegiTalk'\">VegiTalk</li>\r\n");
      out.write("\t\t\t\t");
if(loginUser == null){ 
      out.write("\r\n");
      out.write("\t\t\t\t<li class=\"gnb-nav-list\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/login.me'\">Login</li>\r\n");
      out.write("\t\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t<li class=\"gnb-nav-list\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/myPage'\">My Info</li>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\tfooter{\r\n");
      out.write("\t\tmargin-top: 50px;\r\n");
      out.write("\t\tbottom: 0;\r\n");
      out.write("\t\tpadding-top: 16px;\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\theight: 100px;\r\n");
      out.write("\t\tbackground: #41A693;\r\n");
      out.write("\t\tmin-width: 500px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.f_div1 {\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.f_div1 span{\r\n");
      out.write("\t\tfont-size: 16px;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tcolor : white;\r\n");
      out.write("\t\tpadding: 2px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.f_div1 p{\r\n");
      out.write("\t\tfont-size: 12px;\r\n");
      out.write("\t\tmargin: auto;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t}\r\n");
      out.write("\t.f_div1 a{\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<footer>\r\n");
      out.write("\t\t<div class=\"f_div1\">\r\n");
      out.write("\t\t\t<a href=\"#\"><span>About</span></a>\r\n");
      out.write("\t\t\t<span> | </span>\r\n");
      out.write("\t\t\t<span>Privacy</span>\r\n");
      out.write("\t\t\t<span> | </span>\r\n");
      out.write("\t\t\t<span>Feedback</span>\r\n");
      out.write("\t\t\t<span> | </span>\r\n");
      out.write("\t\t\t<a href=\"#\"><span>Top</span></a>\r\n");
      out.write("\t\t\t<p><a href=\"https://github.com/vegiter/vegiter_web\">채채식 팀 GitHub</a></p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
